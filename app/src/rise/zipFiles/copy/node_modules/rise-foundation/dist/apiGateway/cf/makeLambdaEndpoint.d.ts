declare type Input = {
    endpointName: string;
    lambdaName: string;
    stage: string;
    path: string;
};
export declare function makeLambdaeEndpoint(props: Input): {
    Resources: {
        ApiGatewayRestApi: {
            Type: string;
            Properties: {
                Name: string;
                EndpointConfiguration: {
                    Types: string[];
                };
                Policy: string;
            };
        };
        ApiGatewayResource: {
            Type: string;
            Properties: {
                ParentId: {
                    'Fn::GetAtt': string[];
                };
                PathPart: string;
                RestApiId: {
                    Ref: string;
                };
            };
        };
        ApiGatewayMethodPost: {
            Type: string;
            Properties: {
                HttpMethod: string;
                RequestParameters: {};
                ResourceId: {
                    Ref: string;
                };
                RestApiId: {
                    Ref: string;
                };
                ApiKeyRequired: boolean;
                AuthorizationType: string;
                Integration: {
                    IntegrationHttpMethod: string;
                    Type: string;
                    Uri: {
                        'Fn::Join': (string | (string | {
                            Ref: string;
                            'Fn::GetAtt'?: undefined;
                        } | {
                            'Fn::GetAtt': string[];
                            Ref?: undefined;
                        })[])[];
                    };
                };
                MethodResponses: never[];
            };
        };
        ApiGatewayDeployment: {
            Type: string;
            Properties: {
                RestApiId: {
                    Ref: string;
                };
                StageName: string;
            };
            DependsOn: string[];
        };
        MainLambdaPermissionApiGateway: {
            Type: string;
            Properties: {
                FunctionName: {
                    'Fn::GetAtt': string[];
                };
                Action: string;
                Principal: string;
                SourceArn: {
                    'Fn::Join': (string | (string | {
                        Ref: string;
                    })[])[];
                };
            };
        };
    };
    Outputs: {
        Endpoint: {
            Description: string;
            Value: {
                'Fn::Join': (string | (string | {
                    Ref: string;
                })[])[];
            };
        };
    };
};
export {};
